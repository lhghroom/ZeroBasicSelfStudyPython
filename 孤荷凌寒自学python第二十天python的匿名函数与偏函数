Python为使函数的使用更加方便高效，可以使用两种特殊的函数简化语句书写。
一、	匿名函数
匿名函数可以不定义函数名，只保留关键的函数体内部代码即可，而且函数体内部代码被简化到只能有一行，这就是匿名函数的独特之处。
匿名函数这种特征非常方便于在其它表达式中直接使用，显得干练简洁。
格式：
lambda 形参列表 ：函数体内部代码
形参列表，直接用逗号分隔需要定义的形式参数，且不要使用括号
函数体内部代码只有一行，简洁地写明要执行的运算代码即可，也不用书写返回return语句。
测试：
def 标准函数(x,y):
    return x+y

a=10
b=12
intResult=标准函数(a,b)
print(intResult)
f=lambda x,y:x+y  #f即是这个匿名函数的引用
intResult=f(a,b)  #调用f,即是调用了上面定义的匿名函数
print(intResult)

运行结果：
22
22

二、	偏函数
对于偏函数，我的理解就是，一个函数对别的函数的部分形参的值进行固定化赋值后，形成一个新的函数，在这个新的函数中，只需要传递更少的实参给旧函数的形参就行了，因为有一部分旧函数的形参已经有了新设的默认值了。
在代码书写上，这样可以在使用一些固定实参的函数调用时，少写很多函数的实际参数。
格式：
先引用模块（库）
from functools import partial
然后使用partial关键字：
partial(原来的函数名,为原来函数的多个形参所固定传递的实参)
测试：
from functools import partial

def 个人信息(姓名,QQ号):
    return('当前信息：',姓名,QQ号)

简化的偏函数=partial(个人信息,'孤荷凌寒')

tplA=个人信息('孤荷凌寒','578652607')
tplB=简化的偏函数('578652607')

print(tplA)
print(tplB)
运行结果：
('当前信息：', '孤荷凌寒', '578652607')
('当前信息：', '孤荷凌寒', '578652607')

欢迎联系我加入倡导终身学习终身成长的社群——
就是要学  社群  www.941xue.com/index.aspx 
 
原文地址：http://www.941xue.com/content.aspx?id=191  
B站视频：https://www.bilibili.com/video/BV1tt411U7S7/
