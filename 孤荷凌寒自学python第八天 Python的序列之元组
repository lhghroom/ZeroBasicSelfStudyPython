
元组与列表非常相像，如果要从直观的角度去区分的话，则：
列表使用[]表示，而元组使用（）表示。
一、元组的定义
1． 直接用（）表示一个元组并赋值给一个变量
如：
>>> tplA=('孤','荷','凌','寒')
>>> print(tplA)
('孤', '荷', '凌', '寒')
2.用全局函数 tuple(obj)将其它序列转换为元组
 
>>> tplB=tuple('孤荷凌寒')
>>> print(tplA)
('孤', '荷', '凌', '寒')
 
二、元组与列表的区别
元组在结构与用法上与列表非常相似，但最大的区别在于：
只有列表是可以更改内容的（更改内容的操作包括：添加元素、删除元素、更改元素对象等）。元组不能对自身内容进行更改。一经声明或赋值后，就不能更改内容。
元组是使用圆括号（）标注元素组成的；   列表是使用方括号[]标注元素组成的。
元组用tuple(obj)函数将其它序列转成元组；列表用list(obj)函数将其它序列转换列表。
元组在声明只一个元素的元组对象时：   ；列表在声明只有一个元素列表对象时：  
tplA=(1,) #一个元素时后面必须加逗号；    lstA=[1] #一个元素时与多个元素一样
 
三、元组作为序列对象的一种，可以使用序列的全部通用操作函数
四、注销（dispose）一个元组的方法
我们不能对元组的内容进行更改，也就不能像列表那样删除元组内的元素，
但可以删除（注销）掉元组对象本身：
使用全局函数 del 可以完全注销掉元组本身。
例：
>>> tplA=tuple('孤荷凌寒')
>>> print(tplA)
('孤', '荷', '凌', '寒')
>>> del tplA
>>> print(tplA)  #因为元组对象 tplA 已经不存在了，所以会报错
Traceback (most recent call last):
  File "<pyshell#3>", line 1, in <module>
    print(tplA)
NameError: name 'tplA' is not defined
五、将列表嵌套与元组中
可以将一个列表作为元组的一个元素放入元组中，形成嵌套模式。
当然也可以将一个元组作为列表的一个元素放入列表中。
此时，要特别注意：
元组的内容，即它已定义好的元素是不可更改的；
但是作为元组中的元素的列表对象本身却是可以更改的。
例：
>>> tplA=('孤','荷','凌','寒',['新','手'])
>>> print(tplA)
('孤', '荷', '凌', '寒', ['新', '手'])
>>> tplA[4][0]='好'  #[4]表示元组tplA的index值为4的元素，指的就是列表['新','手'],然后[0]指的是列表['新','手']的第0个元素，所以将'新'改成了'好'
>>> tplA[4][1]='帅'
>>> print(tplA)
('孤', '荷', '凌', '寒', ['好', '帅'])
​

欢迎联系我加入倡导终身学习终身成长的社群——
就是要学  社群  www.941xue.com/index.aspx
 
原文地址：http://www.941xue.com/content.aspx?id=145
B站视频：https://www.bilibili.com/video/BV1bt411U7z5/
 



