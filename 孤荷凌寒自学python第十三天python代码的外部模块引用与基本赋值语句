从结构化编程流行以来，代码便被分块存储，称之为模块或库。
在python中仍然如其它编程语言一样，我们可以在一个文档中方便地引用一个模块，然后可以在当前文档的代码中使用外部模块的可用对象。
一般来说，在python中一个外部模块也对应了一个以.py结尾的具体文件。
一、	引用模块中的全部内容
要想使用一个模块中的全部内容，使用import关键字在文件的最顶端声明一下即可。
import 模块名[,模块名2][,模块名3][……]
具体示例：
import math
上一代码表示，我们要使用pytho标准库目录下的math.py文件中的全部可用对象，包括数学常量，计算方法等。
二、	只引用一个模块中部分内容
如果只是要使用一个模块中的部分内容，则没有必要引用整个模块，我们可以用import关键字声明要引用的那部分内容即可。
from 模块名  import 具体要引用的对象[,具体要引用的对象2][……]
具体示例：
from math import pi
上一代码表示 ，只引用了math.py文件中的一个常量pi

三、	print语句同时输出多个内容
print语句的逗号输出法，使用逗号将多个要输出的对象分隔开
测试：
>>> strA='孤荷凌寒'
>>> lstB=list('QQ号码是：578652607')
>>> tplC=tuple('个人主页：www.lhghroom.cn')
>>> print(strA,lstB,tplC)
孤荷凌寒 ['Q', 'Q', '号', '码', '是', '：', '5', '7', '8', '6', '5', '2', '6', '0', '7'] ('个', '人', '主', '页', '：', 'w', 'w', 'w', '.', 'l', 'h', 'g', 'h', 'r', 'o', 'o', 'm', '.', 'c', 'n')
四、	特殊的赋值方法
一般说来，python和其它高级语言一样，都使用=号来进行赋值操作，将=右边的对象或表达式或值赋予=左边的对象。
如：
strA=’孤荷凌寒’
表示将字符串‘孤荷凌寒’赋值给变量strA
普通的赋值语句只能一次给一个对象或变量赋值一次。
今天学习到了python中非常高效的一些赋值语句的写法，其中有些是其它编程语言也有的习惯写法，而有一些确实是python独有的高效的写法，非常令我叹服。
1 序列解包
在=号左边用逗号分隔多个变量或对象，然后在等号右边也用逗号分隔多个变量或对象或表达式。=两边的对象或变量总数一样多，这样就同时用一行语句进行了多个对象的赋值。
测试：
>>> intA,intB,intC,intD=1,2,3,3+1
>>> print('intA='+ str(intA),'intB='+ str(intB),'intC='+str(intC),'intD='+str(intD))
intA=1 intB=2 intC=3 intD=4
2 稍微变化 的 序列解包
测试：
>>> tplNums=1,2,3,3+1
>>> print(tplNums)
(1, 2, 3, 4)
>>> intA,intB,intC,intD=tplNums
>>> print('intA='+ str(intA),'intB='+ str(intB),'intC='+str(intC),'intD='+str(intD))
intA=1 intB=2 intC=3 intD=4

3 链式赋值
链式赋值像电的传导一样，快速将一个内容传递给多个变量或对象：
测试：
>>> intA=intB=intC=intD=32-8
>>> print('intA='+ str(intA),'intB='+ str(intB),'intC='+str(intC),'intD='+str(intD))
intA=24 intB=24 intC=24 intD=24

4 增量赋值
同多数编程语言一样，python支持简洁的增量赋值
所谓增量赋值是把正常的赋值语句：
i=i+1
简写成：
i+=1
两个语句的效果是一样的。
同样的，将+号换成-*/都是可以的。
但我发现python不支持
i++
这样的写法，是的，不支持！！！
（i++这样的写法在c系及J系等语言中表示 i=i+1）
测试：
>>> i=2
>>> i+=1
>>> print(i)
3
>>> i-=1
>>> print(i)
2
>>> i*=2
>>> print(i)
4
>>> i/=2
>>> print(i)
2.0
>>> i++  #python是不支持这种写法的，于是出错
SyntaxError: invalid syntax

欢迎联系我加入倡导终身学习终身成长的社群——
就是要学  社群  www.941xue.com/index.aspx 
 
原文地址：http://www.941xue.com/content.aspx?id=165
B站视频：https://www.bilibili.com/video/BV1xt411U7Rt/
